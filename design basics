#include <stdio.h>
#include <string.h>
#include <ctype.h>

#define MAX 100

char keywords[32][10] = {
    "int","float","if","else","for","while","do","break","continue",
    "char","double","return","void","switch","case","default",
    "struct","union","enum","typedef","const","sizeof","long",
    "short","unsigned","signed","goto","volatile","register","extern","auto"
};

int isKeyword(char str[]) {
    for(int i = 0; i < 32; i++) {
        if(strcmp(str, keywords[i]) == 0)
            return 1;
    }
    return 0;
}

int isOperator(char ch) {
    if(ch=='+'||ch=='-'||ch=='*'||ch=='/'||ch=='%'||
       ch=='='||ch=='<'||ch=='>'||ch=='!'||
       ch=='&'||ch=='|'||ch=='^')
        return 1;
    return 0;
}

int main() {
    FILE *fp;
    char ch, str[MAX];
    int i = 0;

    fp = fopen("input.txt", "r");
    if(fp == NULL) {
        printf("Error: Cannot open file\n");
        return 1;
    }

    printf("Lexical Analysis Output:\n");

    while((ch = fgetc(fp)) != EOF) {
        if(ch == ' ' || ch == '\n' || ch == '\t')
            continue;

        if(isOperator(ch)) {
            printf("%c -> Operator\n", ch);
        }
        else if(isalpha(ch)) {
            i = 0;
            str[i++] = ch;

            while((ch = fgetc(fp)) != EOF && (isalnum(ch) || ch=='_')) {
                str[i++] = ch;
            }
            str[i] = '\0';

            if(isKeyword(str))
                printf("%s -> Keyword\n", str);
            else
                printf("%s -> Identifier\n", str);

            if(ch == EOF)
                break;
        }
    }

    fclose(fp);
    return 0;
}
